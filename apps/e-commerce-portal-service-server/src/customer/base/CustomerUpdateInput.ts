/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsDate } from "class-validator";
import { FeedbackUpdateManyWithoutCustomersInput } from "./FeedbackUpdateManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { JobOrderUpdateManyWithoutCustomersInput } from "./JobOrderUpdateManyWithoutCustomersInput";
import { RoleUpdateManyWithoutCustomersInput } from "./RoleUpdateManyWithoutCustomersInput";

@InputType()
class CustomerUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FeedbackUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => FeedbackUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => FeedbackUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  feedbacks?: FeedbackUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => JobOrderUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => JobOrderUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => JobOrderUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  jobOrders?: JobOrderUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => RoleUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => RoleUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => RoleUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  roles?: RoleUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  subscriptionDate?: Date | null;
}

export { CustomerUpdateInput as CustomerUpdateInput };
