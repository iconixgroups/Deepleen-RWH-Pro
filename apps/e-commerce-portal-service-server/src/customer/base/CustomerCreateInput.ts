/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsDate } from "class-validator";
import { FeedbackCreateNestedManyWithoutCustomersInput } from "./FeedbackCreateNestedManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { JobOrderCreateNestedManyWithoutCustomersInput } from "./JobOrderCreateNestedManyWithoutCustomersInput";
import { RoleCreateNestedManyWithoutCustomersInput } from "./RoleCreateNestedManyWithoutCustomersInput";

@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FeedbackCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => FeedbackCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => FeedbackCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  feedbacks?: FeedbackCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => JobOrderCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => JobOrderCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => JobOrderCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  jobOrders?: JobOrderCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => RoleCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => RoleCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => RoleCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  roles?: RoleCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  subscriptionDate?: Date | null;
}

export { CustomerCreateInput as CustomerCreateInput };
