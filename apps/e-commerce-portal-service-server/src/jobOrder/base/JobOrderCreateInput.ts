/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ContractCreateNestedManyWithoutJobOrdersInput } from "./ContractCreateNestedManyWithoutJobOrdersInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { FeedbackCreateNestedManyWithoutJobOrdersInput } from "./FeedbackCreateNestedManyWithoutJobOrdersInput";
import { ProcurementCreateNestedManyWithoutJobOrdersInput } from "./ProcurementCreateNestedManyWithoutJobOrdersInput";
import { EnumJobOrderStatus } from "./EnumJobOrderStatus";

@InputType()
class JobOrderCreateInput {
  @ApiProperty({
    required: false,
    type: () => ContractCreateNestedManyWithoutJobOrdersInput,
  })
  @ValidateNested()
  @Type(() => ContractCreateNestedManyWithoutJobOrdersInput)
  @IsOptional()
  @Field(() => ContractCreateNestedManyWithoutJobOrdersInput, {
    nullable: true,
  })
  contracts?: ContractCreateNestedManyWithoutJobOrdersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createdDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => FeedbackCreateNestedManyWithoutJobOrdersInput,
  })
  @ValidateNested()
  @Type(() => FeedbackCreateNestedManyWithoutJobOrdersInput)
  @IsOptional()
  @Field(() => FeedbackCreateNestedManyWithoutJobOrdersInput, {
    nullable: true,
  })
  feedbacks?: FeedbackCreateNestedManyWithoutJobOrdersInput;

  @ApiProperty({
    required: false,
    type: () => ProcurementCreateNestedManyWithoutJobOrdersInput,
  })
  @ValidateNested()
  @Type(() => ProcurementCreateNestedManyWithoutJobOrdersInput)
  @IsOptional()
  @Field(() => ProcurementCreateNestedManyWithoutJobOrdersInput, {
    nullable: true,
  })
  procurements?: ProcurementCreateNestedManyWithoutJobOrdersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  scheduledDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumJobOrderStatus,
  })
  @IsEnum(EnumJobOrderStatus)
  @IsOptional()
  @Field(() => EnumJobOrderStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;
}

export { JobOrderCreateInput as JobOrderCreateInput };
